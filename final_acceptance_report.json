{
  "test_timestamp": "2025-09-03T00:13:25.618722",
  "test_status": "passed",
  "acceptance_tests": [
    {
      "test": "Infrastructure - Container Health",
      "status": "pass",
      "message": "All critical containers running",
      "metrics": {
        "running_containers": 10
      },
      "timestamp": "2025-09-03T00:13:25.630898"
    },
    {
      "test": "Service Health - Prometheus",
      "status": "pass",
      "message": "Service healthy and responsive",
      "metrics": {
        "response_time_ms": "2.6"
      },
      "timestamp": "2025-09-03T00:13:25.633502"
    },
    {
      "test": "Service Health - Grafana",
      "status": "pass",
      "message": "Service healthy and responsive",
      "metrics": {
        "response_time_ms": "1.7"
      },
      "timestamp": "2025-09-03T00:13:25.635175"
    },
    {
      "test": "Service Health - MinIO",
      "status": "pass",
      "message": "Service healthy and responsive",
      "metrics": {
        "response_time_ms": "1.3"
      },
      "timestamp": "2025-09-03T00:13:25.636463"
    },
    {
      "test": "Service Health - Milvus",
      "status": "pass",
      "message": "Service healthy and responsive",
      "metrics": {
        "response_time_ms": "1.1"
      },
      "timestamp": "2025-09-03T00:13:25.637595"
    },
    {
      "test": "Performance - Service Response",
      "status": "pass",
      "message": "Average response time meets target",
      "metrics": {
        "avg_response_time_ms": "1.7",
        "target": "< 200ms"
      },
      "timestamp": "2025-09-03T00:13:25.637607"
    },
    {
      "test": "Database - PostgreSQL",
      "status": "pass",
      "message": "PostgreSQL connection and query successful",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.772958"
    },
    {
      "test": "Database - Redis",
      "status": "pass",
      "message": "Redis connection and ping successful",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.812062"
    },
    {
      "test": "Database - Neo4j",
      "status": "pass",
      "message": "Neo4j container running without critical errors",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.824509"
    },
    {
      "test": "Security - Environment Files",
      "status": "pass",
      "message": "Production environment file not committed to repository",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.824546"
    },
    {
      "test": "Security - Docker Configuration",
      "status": "pass",
      "message": "Application runs as non-root user",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.824599"
    },
    {
      "test": "Security - Port Exposure",
      "status": "pass",
      "message": "No dangerous ports exposed",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.837359"
    },
    {
      "test": "Monitoring - Prometheus Targets",
      "status": "pass",
      "message": "Prometheus collecting metrics from targets",
      "metrics": {
        "active_targets": 2
      },
      "timestamp": "2025-09-03T00:13:25.840045"
    },
    {
      "test": "Monitoring - Grafana Health",
      "status": "pass",
      "message": "Grafana dashboard service healthy",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.841437"
    },
    {
      "test": "Backup - scripts/backup.sh",
      "status": "pass",
      "message": "Script exists and is executable",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.841515"
    },
    {
      "test": "Backup - scripts/restore.sh",
      "status": "pass",
      "message": "Script exists and is executable",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.841528"
    },
    {
      "test": "Configuration - Docker Swarm configuration",
      "status": "pass",
      "message": "Configuration file complete and valid",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.841588"
    },
    {
      "test": "Configuration - Environment template",
      "status": "pass",
      "message": "Configuration file complete and valid",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.841622"
    },
    {
      "test": "Configuration - Python dependencies",
      "status": "pass",
      "message": "Configuration file complete and valid",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.841647"
    },
    {
      "test": "Configuration - Node.js dependencies",
      "status": "pass",
      "message": "Configuration file complete and valid",
      "metrics": {},
      "timestamp": "2025-09-03T00:13:25.841670"
    }
  ],
  "performance_metrics": {},
  "infrastructure_health": {
    "healthy_services": 4,
    "total_services": 4,
    "avg_response_time_ms": 1.6542673110961914
  },
  "errors": [],
  "warnings": [],
  "passed_tests": 20,
  "total_tests": 20,
  "success_rate": 100.0
}