name: AI-Powered Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, master, develop]
  workflow_dispatch:
    inputs:
      review-focus:
        description: 'Specific review focus (security, performance, quality)'
        required: false
        default: 'comprehensive'

env:
  MAX_FILES_PER_REVIEW: 20
  MAX_LINES_PER_REVIEW: 2000
  REVIEW_TIMEOUT_MINUTES: 10

jobs:
  code-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          separator: ','
          files_ignore: |
            *.md
            *.txt
            *.json
            *.yml
            *.yaml
            package-lock.json
            yarn.lock

      - name: Count changes
        id: count-changes
        run: |
          FILES_COUNT=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ',' '\n' | wc -l)
          echo "files_count=$FILES_COUNT" >> $GITHUB_OUTPUT

          if [ $FILES_COUNT -gt ${{ env.MAX_FILES_PER_REVIEW }} ]; then
            echo "warning=Too many files changed ($FILES_COUNT). Review will be limited." >> $GITHUB_OUTPUT
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install requests PyGithub python-dotenv pyyaml

      - name: Run DeepSeek/AI Code Review
        id: ai-review
        env:
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REVIEW_FOCUS: ${{ github.event.inputs.review-focus || 'comprehensive' }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          python .github/scripts/ai_code_review.py

      - name: Post review summary
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const reviewOutput = fs.existsSync('review-output.json') 
              ? JSON.parse(fs.readFileSync('review-output.json', 'utf8'))
              : { summary: 'Review completed but no output generated.' };

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: reviewOutput.summary || 'âœ… Code review completed'
            });

      - name: Apply review labels
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            if (fs.existsSync('review-output.json')) {
              const review = JSON.parse(fs.readFileSync('review-output.json', 'utf8'));
              if (review.labels && review.labels.length > 0) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  labels: review.labels
                });
              }
            }

      - name: Upload review artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-review-report-${{ github.run_id }}
          path: |
            review-output.json
            review-details.md
          retention-days: 30
